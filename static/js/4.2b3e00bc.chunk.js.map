{"version":3,"sources":["pages/Gigs.js","assets/photos/Ross4.jpeg","components/Countdown.js"],"names":["Gigs","nextStream","Date","className","href","date","content","src","require","alt","module","exports","CountdownClock","Completionist","renderer","days","hours","minutes","seconds","completed","parseInt"],"mappings":"8HAAA,iFAIe,SAASA,IACtB,IAAMC,EAAa,IAAIC,KAAK,4BAC5B,OACE,yBAAKC,UAAU,iBACb,oCACA,uEACA,4BACA,uBAAGC,KAAK,qCACN,4CAGF,kBAAC,IAAD,CAAgBC,KAAMJ,EAAYK,QAAS,cAC3C,yBACEC,IAAKC,EAAQ,IACbC,IAAI,gBACJN,UAAU,mB,wCCnBlBO,EAAOC,QAAU,IAA0B,oC,gCCA3C,oEAIe,SAASC,EAAT,GAA4C,IAAlBP,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QACvCO,EAAgB,kBAAM,6CAa5B,OACE,yBAAKV,UAAU,aACb,2BACGG,EACD,0BAAMH,UAAU,kBACd,kBAAC,IAAD,CAAWE,KAAM,IAAIH,KAAKG,GAAOS,SAjBxB,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,QACxC,OADiE,EAAhBC,UAExC,kBAACN,EAAD,MAGL,8BACGO,SAASL,GADZ,UAC0BK,SAASJ,GADnC,WACmDI,SAASH,GAAU,IADtE,YAEYG,SAASF,GAFrB,oB","file":"static/js/4.2b3e00bc.chunk.js","sourcesContent":["import React from \"react\";\nimport CountdownClock from \"../components/Countdown\";\nimport \"./Gigs.css\";\n\nexport default function Gigs() {\n  const nextStream = new Date(\"2020-04-06T17:30:00.000Z\");\n  return (\n    <div className=\"gig-container\">\n      <h1>Gigs</h1>\n      <p>Check facebook for live streams from Sam</p>\n      <p></p>\n      <a href=\"https://www.facebook.com/FWFMusic\">\n        <li>Live Stream</li>\n      </a>\n\n      <CountdownClock date={nextStream} content={\"Next Set:\"} />\n      <img\n        src={require(\"../assets/photos/Ross4.jpeg\")}\n        alt=\"Sam and Jiggy\"\n        className=\"photo-image\"\n      />\n    </div>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/Ross4.bb52ed39.jpeg\";","import React from \"react\";\nimport Countdown from \"react-countdown-now\";\nimport \"./Countdown.css\";\n\nexport default function CountdownClock({ date, content }) {\n  const Completionist = () => <span>It's Live!</span>;\n  const renderer = ({ days, hours, minutes, seconds, completed }) => {\n    if (completed) {\n      return <Completionist />;\n    } else {\n      return (\n        <span>\n          {parseInt(days)} Days, {parseInt(hours)} Hours, {parseInt(minutes)}{\" \"}\n          minutes, {parseInt(seconds)} seconds\n        </span>\n      );\n    }\n  };\n  return (\n    <div className=\"countdown\">\n      <p>\n        {content}\n        <span className=\"countdownTimer\">\n          <Countdown date={new Date(date)} renderer={renderer} />\n        </span>\n      </p>\n    </div>\n  );\n}\n"],"sourceRoot":""}